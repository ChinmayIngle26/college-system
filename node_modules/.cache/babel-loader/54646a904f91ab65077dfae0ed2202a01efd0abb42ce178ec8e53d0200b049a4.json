{"ast":null,"code":"var _jsxFileName = \"/Users/chinmayingle/Documents/college-system/college-system-app/src/components/ElectionSystem.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { db } from '../firebaseConfig';\n// import { collection, getDocs, addDoc } from 'firebase/firestore';\n\n// const ElectionSystem: React.FC = () => {\n//     const [candidates, setCandidates] = useState<{ id: string; name: string; profile: string }[]>([]);\n//     const [voted, setVoted] = useState(false);\n//     const [error, setError] = useState<string | null>(null);\n\n//     useEffect(() => {\n//         const fetchCandidates = async () => {\n//             try {\n//                 const querySnapshot = await getDocs(collection(db, \"candidates\"));\n//                 const candidatesData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })) as { id: string; name: string; profile: string }[];\n//                 setCandidates(candidatesData);\n//             } catch (err) {\n//                 setError('Failed to fetch candidates');\n//             }\n//         };\n\n//         fetchCandidates();\n//     }, []);\n\n//     const handleVote = async (candidateId: string) => {\n//         if (voted) {\n//             setError('You have already voted');\n//             return;\n//         }\n\n//         try {\n//             await addDoc(collection(db, \"votes\"), { candidateId });\n//             setVoted(true);\n//             setError(null);\n//         } catch (err) {\n//             setError('An error occurred while voting');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Student Election System</h1>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <ul>\n//                 {candidates.map((candidate) => (\n//                     <li key={candidate.id}>\n//                         <h2>{candidate.name}</h2>\n//                         <p>{candidate.profile}</p>\n//                         <button onClick={() => handleVote(candidate.id)} disabled={voted}>\n//                             {voted ? 'Voted' : 'Vote'}\n//                         </button>\n//                     </li>\n//                 ))}\n//             </ul>\n//             {voted && <p>Thank you for voting!</p>}\n//         </div>\n//     );\n// };\n\n// export default ElectionSystem;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { db } from '../firebaseConfig'; // Import Firestore db\nimport { collection, getDocs } from 'firebase/firestore'; // Firebase Firestore methods\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectionSystem = () => {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  const [voted, setVoted] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch candidates from the Firestore collection\n    const fetchCandidates = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, 'candidates'));\n        const candidatesList = [];\n        querySnapshot.forEach(doc => {\n          candidatesList.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setCandidates(candidatesList);\n      } catch (err) {\n        setError('Failed to fetch candidates');\n      }\n    };\n    fetchCandidates();\n  }, []);\n  const handleVote = async candidateId => {\n    if (voted) {\n      setError('You have already voted');\n      return;\n    }\n\n    // Here you would submit the vote (handle voting logic)\n    // For now, simulate vote and update the state.\n    setVoted(true);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Election System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: candidate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: candidate.profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(candidate.id),\n          disabled: voted,\n          children: voted ? 'Voted' : 'Vote'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, candidate.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), voted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for voting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !voted && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/apply-candidate\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Apply as a Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(ElectionSystem, \"mEX01vRYIAgKSxypViiXuIQF9JA=\");\n_c = ElectionSystem;\nexport default ElectionSystem;\nvar _c;\n$RefreshReg$(_c, \"ElectionSystem\");","map":{"version":3,"names":["React","useState","useEffect","Link","db","collection","getDocs","jsxDEV","_jsxDEV","ElectionSystem","_s","candidates","setCandidates","voted","setVoted","error","setError","fetchCandidates","querySnapshot","candidatesList","forEach","doc","push","id","data","err","handleVote","candidateId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","candidate","name","profile","onClick","disabled","to","_c","$RefreshReg$"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/components/ElectionSystem.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { db } from '../firebaseConfig';\n// import { collection, getDocs, addDoc } from 'firebase/firestore';\n\n// const ElectionSystem: React.FC = () => {\n//     const [candidates, setCandidates] = useState<{ id: string; name: string; profile: string }[]>([]);\n//     const [voted, setVoted] = useState(false);\n//     const [error, setError] = useState<string | null>(null);\n\n//     useEffect(() => {\n//         const fetchCandidates = async () => {\n//             try {\n//                 const querySnapshot = await getDocs(collection(db, \"candidates\"));\n//                 const candidatesData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })) as { id: string; name: string; profile: string }[];\n//                 setCandidates(candidatesData);\n//             } catch (err) {\n//                 setError('Failed to fetch candidates');\n//             }\n//         };\n\n//         fetchCandidates();\n//     }, []);\n\n//     const handleVote = async (candidateId: string) => {\n//         if (voted) {\n//             setError('You have already voted');\n//             return;\n//         }\n\n//         try {\n//             await addDoc(collection(db, \"votes\"), { candidateId });\n//             setVoted(true);\n//             setError(null);\n//         } catch (err) {\n//             setError('An error occurred while voting');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Student Election System</h1>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <ul>\n//                 {candidates.map((candidate) => (\n//                     <li key={candidate.id}>\n//                         <h2>{candidate.name}</h2>\n//                         <p>{candidate.profile}</p>\n//                         <button onClick={() => handleVote(candidate.id)} disabled={voted}>\n//                             {voted ? 'Voted' : 'Vote'}\n//                         </button>\n//                     </li>\n//                 ))}\n//             </ul>\n//             {voted && <p>Thank you for voting!</p>}\n//         </div>\n//     );\n// };\n\n// export default ElectionSystem;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { db } from '../firebaseConfig'; // Import Firestore db\nimport { collection, getDocs } from 'firebase/firestore'; // Firebase Firestore methods\n\nconst ElectionSystem = () => {\n    const [candidates, setCandidates] = useState<{ id: string; name: string; profile: string }[]>([]);\n    const [voted, setVoted] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        // Fetch candidates from the Firestore collection\n        const fetchCandidates = async () => {\n            try {\n                const querySnapshot = await getDocs(collection(db, 'candidates'));\n                const candidatesList: any[] = [];\n                querySnapshot.forEach((doc) => {\n                    candidatesList.push({ id: doc.id, ...doc.data() });\n                });\n                setCandidates(candidatesList);\n            } catch (err) {\n                setError('Failed to fetch candidates');\n            }\n        };\n\n        fetchCandidates();\n    }, []);\n\n    const handleVote = async (candidateId: string) => {\n        if (voted) {\n            setError('You have already voted');\n            return;\n        }\n\n        // Here you would submit the vote (handle voting logic)\n        // For now, simulate vote and update the state.\n        setVoted(true);\n        setError(null);\n    };\n\n    return (\n        <div>\n            <h1>Student Election System</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <ul>\n                {candidates.map((candidate) => (\n                    <li key={candidate.id}>\n                        <h2>{candidate.name}</h2>\n                        <p>{candidate.profile}</p>\n                        <button onClick={() => handleVote(candidate.id)} disabled={voted}>\n                            {voted ? 'Voted' : 'Vote'}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {voted && <p>Thank you for voting!</p>}\n\n            <div>\n                {!voted && (\n                    <Link to=\"/apply-candidate\">\n                        <button>Apply as a Candidate</button>\n                    </Link>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ElectionSystem;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,EAAE,QAAQ,mBAAmB,CAAC,CAAC;AACxC,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAkD,EAAE,CAAC;EACjG,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,aAAa,GAAG,MAAMZ,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,YAAY,CAAC,CAAC;QACjE,MAAMe,cAAqB,GAAG,EAAE;QAChCD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC3BF,cAAc,CAACG,IAAI,CAAC;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;UAAE,CAAC,CAAC;QACtD,CAAC,CAAC;QACFZ,aAAa,CAACO,cAAc,CAAC;MACjC,CAAC,CAAC,OAAOM,GAAG,EAAE;QACVT,QAAQ,CAAC,4BAA4B,CAAC;MAC1C;IACJ,CAAC;IAEDC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,UAAU,GAAG,MAAOC,WAAmB,IAAK;IAC9C,IAAId,KAAK,EAAE;MACPG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACJ;;IAEA;IACA;IACAF,QAAQ,CAAC,IAAI,CAAC;IACdE,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACIR,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BjB,KAAK,iBAAIP,OAAA;MAAGyB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDxB,OAAA;MAAAoB,QAAA,EACKjB,UAAU,CAACwB,GAAG,CAAEC,SAAS,iBACtB5B,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,EAAKQ,SAAS,CAACC;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBxB,OAAA;UAAAoB,QAAA,EAAIQ,SAAS,CAACE;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BxB,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACU,SAAS,CAACb,EAAE,CAAE;UAACiB,QAAQ,EAAE3B,KAAM;UAAAe,QAAA,EAC5Df,KAAK,GAAG,OAAO,GAAG;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA,GALJI,SAAS,CAACb,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMjB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACJnB,KAAK,iBAAIL,OAAA;MAAAoB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtCxB,OAAA;MAAAoB,QAAA,EACK,CAACf,KAAK,iBACHL,OAAA,CAACL,IAAI;QAACsC,EAAE,EAAC,kBAAkB;QAAAb,QAAA,eACvBpB,OAAA;UAAAoB,QAAA,EAAQ;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA7DID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA+DpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}