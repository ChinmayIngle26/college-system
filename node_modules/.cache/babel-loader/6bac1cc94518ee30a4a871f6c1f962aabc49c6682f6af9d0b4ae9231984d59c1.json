{"ast":null,"code":"import axios from 'axios';\nimport { API_ENDPOINTS } from '/Users/chinmayingle/Documents/college-system/college-system-app/src/utils/constants';\n\n// import { API_ENDPOINTS } from '../utils/constants';\n\nexport const fetchElectionData = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.ELECTIONS.BASE);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching election data');\n  }\n};\nexport const submitVote = async voteData => {\n  try {\n    const response = await axios.post(API_ENDPOINTS.ELECTIONS.VOTE, voteData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error submitting vote');\n  }\n};\nexport const fetchComplaints = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.COMPLAINTS.ANONYMOUS);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching complaints');\n  }\n};\nexport const submitComplaint = async complaintData => {\n  try {\n    const response = await axios.post(API_ENDPOINTS.COMPLAINTS.ANONYMOUS, complaintData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error submitting complaint');\n  }\n};\nexport const fetchBudgetData = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.BUDGETS.BASE);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching budget data');\n  }\n};\nexport const fetchAcademicIntegrityRecords = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.ACADEMIC.INTEGRITY);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching academic integrity records');\n  }\n};\nexport const fetchApplications = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.APPLICATIONS.BASE);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching applications');\n  }\n};\nexport const submitApplication = async applicationData => {\n  try {\n    const response = await axios.post(API_ENDPOINTS.APPLICATIONS.BASE, applicationData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error submitting application');\n  }\n};\nexport const updateApplicationStatus = async (id, status) => {\n  try {\n    const response = await axios.patch(`${API_ENDPOINTS.APPLICATIONS.STATUS_UPDATE}/${id}`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error updating application status');\n  }\n};\nexport const fetchBudgets = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINTS.BUDGETS.TRACKING);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching budgets');\n  }\n};\nexport const submitExpenseProof = async (budgetId, proof) => {\n  const formData = new FormData();\n  formData.append('proof', proof);\n  try {\n    const response = await axios.post(`${API_ENDPOINTS.BUDGETS.UPLOAD_PROOF}/${budgetId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error submitting expense proof');\n  }\n};","map":{"version":3,"names":["axios","API_ENDPOINTS","fetchElectionData","response","get","ELECTIONS","BASE","data","error","Error","submitVote","voteData","post","VOTE","fetchComplaints","COMPLAINTS","ANONYMOUS","submitComplaint","complaintData","fetchBudgetData","BUDGETS","fetchAcademicIntegrityRecords","ACADEMIC","INTEGRITY","fetchApplications","APPLICATIONS","submitApplication","applicationData","updateApplicationStatus","id","status","patch","STATUS_UPDATE","fetchBudgets","TRACKING","submitExpenseProof","budgetId","proof","formData","FormData","append","UPLOAD_PROOF","headers"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { API_ENDPOINTS } from '/Users/chinmayingle/Documents/college-system/college-system-app/src/utils/constants';\n\n// import { API_ENDPOINTS } from '../utils/constants';\n\nexport const fetchElectionData = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.ELECTIONS.BASE);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching election data');\n    }\n};\n\ninterface VoteData {\n    candidateId: string;\n    voterId: string;\n    // add other fields as necessary\n}\n\nexport const submitVote = async (voteData: VoteData) => {\n    try {\n        const response = await axios.post(API_ENDPOINTS.ELECTIONS.VOTE, voteData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error submitting vote');\n    }\n};\n\nexport const fetchComplaints = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.COMPLAINTS.ANONYMOUS);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching complaints');\n    }\n};\n\ninterface ComplaintData {\n    title: string;\n    description: string;\n    // add other fields as necessary\n}\n\nexport const submitComplaint = async (complaintData: ComplaintData) => {\n    try {\n        const response = await axios.post(API_ENDPOINTS.COMPLAINTS.ANONYMOUS, complaintData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error submitting complaint');\n    }\n};\n\nexport const fetchBudgetData = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.BUDGETS.BASE);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching budget data');\n    }\n};\n\nexport const fetchAcademicIntegrityRecords = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.ACADEMIC.INTEGRITY);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching academic integrity records');\n    }\n};\n\nexport const fetchApplications = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.APPLICATIONS.BASE);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching applications');\n    }\n};\n\ninterface ApplicationData {\n    title: string;\n    description: string;\n    // add other fields as necessary\n}\n\nexport const submitApplication = async (applicationData: ApplicationData) => {\n    try {\n        const response = await axios.post(API_ENDPOINTS.APPLICATIONS.BASE, applicationData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error submitting application');\n    }\n};\n\nexport const updateApplicationStatus = async (id: string, status: string) => {\n    try {\n        const response = await axios.patch(`${API_ENDPOINTS.APPLICATIONS.STATUS_UPDATE}/${id}`, { status });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error updating application status');\n    }\n};\n\nexport const fetchBudgets = async () => {\n    try {\n        const response = await axios.get(API_ENDPOINTS.BUDGETS.TRACKING);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching budgets');\n    }\n};\n\nexport const submitExpenseProof = async (budgetId: string, proof: File) => {\n    const formData = new FormData();\n    formData.append('proof', proof);\n\n    try {\n        const response = await axios.post(`${API_ENDPOINTS.BUDGETS.UPLOAD_PROOF}/${budgetId}`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error submitting expense proof');\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}