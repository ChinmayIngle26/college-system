{"ast":null,"code":"var _jsxFileName = \"/Users/chinmayingle/Documents/college-system/college-system-app/src/components/HealthLeaveNotifications.tsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { sendHealthNotification } from \"../services/notification\";\n\n// const HealthNotification = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [coordinatorEmail, setCoordinatorEmail] = useState(\"\");\n//     const [studentName, setStudentName] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n//     const [loading, setLoading] = useState(false);\n\n//     const handleSendNotification = async () => {\n//         if (!email || !coordinatorEmail || !studentName) {\n//             setMessage(\"⚠️ Please fill in all fields.\");\n//             return;\n//         }\n\n//         setLoading(true);\n//         const response = await sendHealthNotification(email, coordinatorEmail, studentName);\n//         setLoading(false);\n\n//         if (response.error) {\n//             setMessage(\"❌ Error sending notification: \" + response.error);\n//         } else {\n//             setMessage(\"✅ Health notification sent successfully!\");\n//             setEmail(\"\");\n//             setCoordinatorEmail(\"\");\n//             setStudentName(\"\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Send Health Notification</h2>\n//             <input type=\"email\" placeholder=\"Student Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//             <input type=\"email\" placeholder=\"Coordinator Email\" value={coordinatorEmail} onChange={(e) => setCoordinatorEmail(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Student Name\" value={studentName} onChange={(e) => setStudentName(e.target.value)} />\n//             <button onClick={handleSendNotification} disabled={loading}>\n//                 {loading ? \"Sending...\" : \"Send Notification\"}\n//             </button>\n//             {message && <p>{message}</p>}\n//         </div>\n//     );\n// };\n\n// export default HealthNotification;\n\n//----------------------------------------------------------------\n\nimport { useState, useEffect } from \"react\";\nimport { applyForLeave, getLeaveStatus } from \"../services/leaveService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaveApplication = ({\n  userEmail\n}) => {\n  _s();\n  const [duration, setDuration] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const [status, setStatus] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchLeaveStatus = async () => {\n      const response = await getLeaveStatus(userEmail);\n      if (response) setStatus(response.status);\n    };\n    fetchLeaveStatus();\n  }, [userEmail]);\n  const handleApply = async () => {\n    if (!duration || !reason) {\n      setMessage(\"⚠️ Please fill in all fields.\");\n      return;\n    }\n    setLoading(true);\n    const response = await applyForLeave(userEmail, duration, reason);\n    setLoading(false);\n    if (response.error) {\n      setMessage(\"❌ Error: \" + response.error);\n    } else {\n      setMessage(\"✅ Leave application sent!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Apply for Leave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Duration (e.g., 2 days)\",\n      value: duration,\n      onChange: e => setDuration(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Reason for leave\",\n      value: reason,\n      onChange: e => setReason(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleApply,\n      disabled: loading,\n      children: loading ? \"Submitting...\" : \"Apply for Leave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Leave Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(LeaveApplication, \"rTEnMdqPRQLdHHNaCCF9tPczzgM=\");\n_c = LeaveApplication;\nexport default LeaveApplication;\nvar _c;\n$RefreshReg$(_c, \"LeaveApplication\");","map":{"version":3,"names":["useState","useEffect","applyForLeave","getLeaveStatus","jsxDEV","_jsxDEV","LeaveApplication","userEmail","_s","duration","setDuration","reason","setReason","status","setStatus","loading","setLoading","message","setMessage","fetchLeaveStatus","response","handleApply","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/components/HealthLeaveNotifications.tsx"],"sourcesContent":["// import { useState } from \"react\";\n// import { sendHealthNotification } from \"../services/notification\";\n\n// const HealthNotification = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [coordinatorEmail, setCoordinatorEmail] = useState(\"\");\n//     const [studentName, setStudentName] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n//     const [loading, setLoading] = useState(false);\n\n//     const handleSendNotification = async () => {\n//         if (!email || !coordinatorEmail || !studentName) {\n//             setMessage(\"⚠️ Please fill in all fields.\");\n//             return;\n//         }\n\n//         setLoading(true);\n//         const response = await sendHealthNotification(email, coordinatorEmail, studentName);\n//         setLoading(false);\n\n//         if (response.error) {\n//             setMessage(\"❌ Error sending notification: \" + response.error);\n//         } else {\n//             setMessage(\"✅ Health notification sent successfully!\");\n//             setEmail(\"\");\n//             setCoordinatorEmail(\"\");\n//             setStudentName(\"\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Send Health Notification</h2>\n//             <input type=\"email\" placeholder=\"Student Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//             <input type=\"email\" placeholder=\"Coordinator Email\" value={coordinatorEmail} onChange={(e) => setCoordinatorEmail(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Student Name\" value={studentName} onChange={(e) => setStudentName(e.target.value)} />\n//             <button onClick={handleSendNotification} disabled={loading}>\n//                 {loading ? \"Sending...\" : \"Send Notification\"}\n//             </button>\n//             {message && <p>{message}</p>}\n//         </div>\n//     );\n// };\n\n// export default HealthNotification;\n\n//----------------------------------------------------------------\n\nimport { useState, useEffect } from \"react\";\nimport { applyForLeave, getLeaveStatus } from \"../services/leaveService\";\n\nconst LeaveApplication = ({ userEmail }: { userEmail: string }) => {\n    const [duration, setDuration] = useState(\"\");\n    const [reason, setReason] = useState(\"\");\n    const [status, setStatus] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        const fetchLeaveStatus = async () => {\n            const response = await getLeaveStatus(userEmail);\n            if (response) setStatus(response.status);\n        };\n        fetchLeaveStatus();\n    }, [userEmail]);\n\n    const handleApply = async () => {\n        if (!duration || !reason) {\n            setMessage(\"⚠️ Please fill in all fields.\");\n            return;\n        }\n\n        setLoading(true);\n        const response = await applyForLeave(userEmail, duration, reason);\n        setLoading(false);\n\n        if (response.error) {\n            setMessage(\"❌ Error: \" + response.error);\n        } else {\n            setMessage(\"✅ Leave application sent!\");\n        }\n    };\n\n    return (\n        <div>\n            <h2>Apply for Leave</h2>\n            <input type=\"text\" placeholder=\"Duration (e.g., 2 days)\" value={duration} onChange={(e) => setDuration(e.target.value)} />\n            <textarea placeholder=\"Reason for leave\" value={reason} onChange={(e) => setReason(e.target.value)} />\n            <button onClick={handleApply} disabled={loading}>\n                {loading ? \"Submitting...\" : \"Apply for Leave\"}\n            </button>\n            {message && <p>{message}</p>}\n            {status && <p>Leave Status: {status}</p>}\n        </div>\n    );\n};\n\nexport default LeaveApplication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}