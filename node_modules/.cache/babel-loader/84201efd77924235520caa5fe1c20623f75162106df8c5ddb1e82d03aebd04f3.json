{"ast":null,"code":"var _jsxFileName = \"/Users/chinmayingle/Documents/college-system/college-system-app/src/components/ElectionSystem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectionSystem = () => {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  const [voted, setVoted] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch candidates from the API\n    const fetchCandidates = async () => {\n      try {\n        const response = await fetch('/api/election/candidates');\n        const data = await response.json();\n        setCandidates(data);\n      } catch (err) {\n        setError('Failed to fetch candidates');\n      }\n    };\n    fetchCandidates();\n  }, []);\n  const handleVote = async candidateId => {\n    if (voted) {\n      setError('You have already voted');\n      return;\n    }\n    try {\n      const response = await fetch('/api/election/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          candidateId\n        })\n      });\n      if (response.ok) {\n        setVoted(true);\n        setError(null);\n      } else {\n        setError('Failed to cast vote');\n      }\n    } catch (err) {\n      setError('An error occurred while voting');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Election System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: candidate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: candidate.profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(candidate.id),\n          disabled: voted,\n          children: voted ? 'Voted' : 'Vote'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, candidate.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), voted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for voting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ElectionSystem, \"mEX01vRYIAgKSxypViiXuIQF9JA=\");\n_c = ElectionSystem;\nexport default ElectionSystem;\nvar _c;\n$RefreshReg$(_c, \"ElectionSystem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ElectionSystem","_s","candidates","setCandidates","voted","setVoted","error","setError","fetchCandidates","response","fetch","data","json","err","handleVote","candidateId","method","headers","body","JSON","stringify","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","candidate","name","profile","onClick","id","disabled","_c","$RefreshReg$"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/components/ElectionSystem.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ElectionSystem = () => {\n    const [candidates, setCandidates] = useState<{ id: number; name: string; profile: string }[]>([]);\n    const [voted, setVoted] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        // Fetch candidates from the API\n        const fetchCandidates = async () => {\n            try {\n                const response = await fetch('/api/election/candidates');\n                const data = await response.json();\n                setCandidates(data);\n            } catch (err) {\n                setError('Failed to fetch candidates');\n            }\n        };\n\n        fetchCandidates();\n    }, []);\n\n    const handleVote = async (candidateId: number) => {\n        if (voted) {\n            setError('You have already voted');\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/election/vote', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ candidateId }),\n            });\n\n            if (response.ok) {\n                setVoted(true);\n                setError(null);\n            } else {\n                setError('Failed to cast vote');\n            }\n        } catch (err) {\n            setError('An error occurred while voting');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Student Election System</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <ul>\n                {candidates.map((candidate) => (\n                    <li key={candidate.id}>\n                        <h2>{candidate.name}</h2>\n                        <p>{candidate.profile}</p>\n                        <button onClick={() => handleVote(candidate.id)} disabled={voted}>\n                            {voted ? 'Voted' : 'Vote'}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {voted && <p>Thank you for voting!</p>}\n        </div>\n    );\n};\n\nexport default ElectionSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}