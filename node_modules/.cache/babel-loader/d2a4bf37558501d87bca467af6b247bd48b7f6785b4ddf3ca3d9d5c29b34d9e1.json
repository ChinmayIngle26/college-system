{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, doc, setDoc, getDoc, getDocs } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\"; // ✅ Import Auth\nimport { sendEmail } from \"./emailService\";\nconst leaveCollection = collection(db, \"leaveApplications\");\n\n// **Student applies for leave**\nexport const applyForLeave = async (email, duration, reason) => {\n  try {\n    const leaveRef = doc(db, \"leaveApplications\", email);\n    await setDoc(leaveRef, {\n      email,\n      duration,\n      reason,\n      status: \"Pending\"\n    });\n\n    // Notify class coordinator via email\n    await sendEmail(\"coordinator@example.com\",\n    // Replace with coordinator's actual email\n    \"New Leave Request\", `Student ${email} has applied for leave for ${duration} days.\\nReason: ${reason}.\\n\\n\n            Please approve or reject in your dashboard.`);\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// **Get leave status for student dashboard**\nexport const getLeaveStatus = async email => {\n  try {\n    const leaveRef = doc(db, \"leaveApplications\", email);\n    const leaveDoc = await getDoc(leaveRef);\n    return leaveDoc.exists() ? leaveDoc.data() : null;\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// **Get all leave requests for coordinator dashboard**\nexport const getLeaveRequests = async () => {\n  try {\n    const snapshot = await getDocs(leaveCollection);\n    return snapshot.docs.map(doc => doc.data());\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// **Approve/Reject Leave Application**\nexport const updateLeaveStatus = async (email, status) => {\n  try {\n    const leaveRef = doc(db, \"leaveApplications\", email);\n    await setDoc(leaveRef, {\n      status\n    }, {\n      merge: true\n    });\n\n    // Notify student about the decision\n    await sendEmail(email, \"Leave Application Update\", `Your leave request has been ${status}.`);\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["db","collection","doc","setDoc","getDoc","getDocs","getAuth","sendEmail","leaveCollection","applyForLeave","email","duration","reason","leaveRef","status","success","error","message","getLeaveStatus","leaveDoc","exists","data","getLeaveRequests","snapshot","docs","map","updateLeaveStatus","merge"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/services/leaveService.js"],"sourcesContent":["import { db } from \"./firebase\";\nimport { collection, doc, setDoc, getDoc, getDocs } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\"; // ✅ Import Auth\nimport { sendEmail } from \"./emailService\";\n\nconst leaveCollection = collection(db, \"leaveApplications\");\n\n// **Student applies for leave**\nexport const applyForLeave = async (email, duration, reason) => {\n    try {\n        const leaveRef = doc(db, \"leaveApplications\", email);\n        await setDoc(leaveRef, { \n            email, \n            duration, \n            reason, \n            status: \"Pending\" \n        });\n\n        // Notify class coordinator via email\n        await sendEmail(\n            \"coordinator@example.com\", // Replace with coordinator's actual email\n            \"New Leave Request\",\n            `Student ${email} has applied for leave for ${duration} days.\\nReason: ${reason}.\\n\\n\n            Please approve or reject in your dashboard.`\n        );\n\n        return { success: true };\n    } catch (error) {\n        return { error: error.message };\n    }\n};\n\n// **Get leave status for student dashboard**\nexport const getLeaveStatus = async (email) => {\n    try {\n        const leaveRef = doc(db, \"leaveApplications\", email);\n        const leaveDoc = await getDoc(leaveRef);\n        return leaveDoc.exists() ? leaveDoc.data() : null;\n    } catch (error) {\n        return { error: error.message };\n    }\n};\n\n// **Get all leave requests for coordinator dashboard**\nexport const getLeaveRequests = async () => {\n    try {\n        const snapshot = await getDocs(leaveCollection);\n        return snapshot.docs.map(doc => doc.data());\n    } catch (error) {\n        return { error: error.message };\n    }\n};\n\n// **Approve/Reject Leave Application**\nexport const updateLeaveStatus = async (email, status) => {\n    try {\n        const leaveRef = doc(db, \"leaveApplications\", email);\n        await setDoc(leaveRef, { status }, { merge: true });\n\n        // Notify student about the decision\n        await sendEmail(\n            email,\n            \"Leave Application Update\",\n            `Your leave request has been ${status}.`\n        );\n\n        return { success: true };\n    } catch (error) {\n        return { error: error.message };\n    }\n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AAC7E,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;AACzC,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,eAAe,GAAGP,UAAU,CAACD,EAAE,EAAE,mBAAmB,CAAC;;AAE3D;AACA,OAAO,MAAMS,aAAa,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAC5D,IAAI;IACA,MAAMC,QAAQ,GAAGX,GAAG,CAACF,EAAE,EAAE,mBAAmB,EAAEU,KAAK,CAAC;IACpD,MAAMP,MAAM,CAACU,QAAQ,EAAE;MACnBH,KAAK;MACLC,QAAQ;MACRC,MAAM;MACNE,MAAM,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMP,SAAS,CACX,yBAAyB;IAAE;IAC3B,mBAAmB,EACnB,WAAWG,KAAK,8BAA8BC,QAAQ,mBAAmBC,MAAM;AAC3F,wDACQ,CAAC;IAED,OAAO;MAAEG,OAAO,EAAE;IAAK,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACnC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOR,KAAK,IAAK;EAC3C,IAAI;IACA,MAAMG,QAAQ,GAAGX,GAAG,CAACF,EAAE,EAAE,mBAAmB,EAAEU,KAAK,CAAC;IACpD,MAAMS,QAAQ,GAAG,MAAMf,MAAM,CAACS,QAAQ,CAAC;IACvC,OAAOM,QAAQ,CAACC,MAAM,CAAC,CAAC,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI;EACrD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACnC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACG,eAAe,CAAC;IAC/C,OAAOe,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACvB,GAAG,IAAIA,GAAG,CAACmB,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACnC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOhB,KAAK,EAAEI,MAAM,KAAK;EACtD,IAAI;IACA,MAAMD,QAAQ,GAAGX,GAAG,CAACF,EAAE,EAAE,mBAAmB,EAAEU,KAAK,CAAC;IACpD,MAAMP,MAAM,CAACU,QAAQ,EAAE;MAAEC;IAAO,CAAC,EAAE;MAAEa,KAAK,EAAE;IAAK,CAAC,CAAC;;IAEnD;IACA,MAAMpB,SAAS,CACXG,KAAK,EACL,0BAA0B,EAC1B,+BAA+BI,MAAM,GACzC,CAAC;IAED,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACnC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}