{"ast":null,"code":"var _jsxFileName = \"/Users/chinmayingle/Documents/college-system/college-system-app/src/components/FacilityBookingSystem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FacilityBookingSystem = () => {\n  _s();\n  const [facilities, setFacilities] = useState([]);\n  const [selectedFacility, setSelectedFacility] = useState('');\n  const [bookingDate, setBookingDate] = useState('');\n  const [availability, setAvailability] = useState(null);\n  useEffect(() => {\n    // Fetch facilities from the API\n    const fetchFacilities = async () => {\n      const response = await fetch('/api/facilities');\n      const data = await response.json();\n      setFacilities(data);\n    };\n    fetchFacilities();\n  }, []);\n  const checkAvailability = async () => {\n    const response = await fetch(`/api/facilities/${selectedFacility}/availability?date=${bookingDate}`);\n    const data = await response.json();\n    setAvailability(data);\n  };\n  const handleBooking = async () => {\n    const response = await fetch(`/api/facilities/${selectedFacility}/book`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: bookingDate\n      })\n    });\n    if (response.ok) {\n      alert('Booking successful!');\n      // Optionally refresh availability or reset form\n    } else {\n      alert('Booking failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Campus Facility Booking System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Facility:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedFacility,\n        onChange: e => setSelectedFacility(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), facilities.map(facility => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: facility.id,\n          children: facility.name\n        }, facility.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: availability !== null && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: bookingDate,\n        onChange: e => setBookingDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAvailability,\n      children: \"Check Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), availability && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: availability.isAvailable ? 'Available' : 'Not Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), availability.isAvailable && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBooking,\n        children: \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(FacilityBookingSystem, \"WLiCPCswWCB3rkI8REZJus0+Lqw=\");\n_c = FacilityBookingSystem;\nexport default FacilityBookingSystem;\nvar _c;\n$RefreshReg$(_c, \"FacilityBookingSystem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FacilityBookingSystem","_s","facilities","setFacilities","selectedFacility","setSelectedFacility","bookingDate","setBookingDate","availability","setAvailability","fetchFacilities","response","fetch","data","json","checkAvailability","handleBooking","method","headers","body","JSON","stringify","date","ok","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","facility","id","name","type","onClick","isAvailable","_c","$RefreshReg$"],"sources":["/Users/chinmayingle/Documents/college-system/college-system-app/src/components/FacilityBookingSystem.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FacilityBookingSystem = () => {\n    interface Facility {\n        id: string;\n        name: string;\n    }\n\n    const [facilities, setFacilities] = useState<Facility[]>([]);\n    const [selectedFacility, setSelectedFacility] = useState('');\n    const [bookingDate, setBookingDate] = useState('');\n    interface Availability {\n        isAvailable: boolean;\n    }\n\n    const [availability, setAvailability] = useState<Availability | null>(null);\n\n    useEffect(() => {\n        // Fetch facilities from the API\n        const fetchFacilities = async () => {\n            const response = await fetch('/api/facilities');\n            const data = await response.json();\n            setFacilities(data);\n        };\n        fetchFacilities();\n    }, []);\n\n    const checkAvailability = async () => {\n        const response = await fetch(`/api/facilities/${selectedFacility}/availability?date=${bookingDate}`);\n        const data = await response.json();\n        setAvailability(data);\n    };\n\n    const handleBooking = async () => {\n        const response = await fetch(`/api/facilities/${selectedFacility}/book`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ date: bookingDate }),\n        });\n        if (response.ok) {\n            alert('Booking successful!');\n            // Optionally refresh availability or reset form\n        } else {\n            alert('Booking failed. Please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Campus Facility Booking System</h1>\n            <label>\n                Select Facility:\n                <select value={selectedFacility} onChange={(e) => setSelectedFacility(e.target.value)}>\n                    <option value=\"\">Select...</option>\n                    {facilities.map((facility) => (\n                        <option key={facility.id} value={facility.id}>{facility.name}</option>\n                    ))}\n                </select>\n            </label>\n            <label>\n            {availability !== null && (\n                <input type=\"date\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} />\n            )}\n            </label>\n            <button onClick={checkAvailability}>Check Availability</button>\n            {availability && (\n                <div>\n                    <h2>Availability</h2>\n                    <p>{availability.isAvailable ? 'Available' : 'Not Available'}</p>\n                    {availability.isAvailable && <button onClick={handleBooking}>Book Now</button>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default FacilityBookingSystem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAMhC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAa,EAAE,CAAC;EAC5D,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAKlD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAsB,IAAI,CAAC;EAE3EC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;MAC/C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCX,aAAa,CAACU,IAAI,CAAC;IACvB,CAAC;IACDH,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmBR,gBAAgB,sBAAsBE,WAAW,EAAE,CAAC;IACpG,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,eAAe,CAACI,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmBR,gBAAgB,OAAO,EAAE;MACrEa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEhB;MAAY,CAAC;IAC9C,CAAC,CAAC;IACF,IAAIK,QAAQ,CAACY,EAAE,EAAE;MACbC,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACJ,CAAC,MAAM;MACHA,KAAK,CAAC,mCAAmC,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC9B,OAAA;MAAA0B,QAAA,GAAO,kBAEH,eAAA1B,OAAA;QAAQ+B,KAAK,EAAE1B,gBAAiB;QAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,mBAAmB,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAClF1B,OAAA;UAAQ+B,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClC3B,UAAU,CAACgC,GAAG,CAAEC,QAAQ,iBACrBpC,OAAA;UAA0B+B,KAAK,EAAEK,QAAQ,CAACC,EAAG;UAAAX,QAAA,EAAEU,QAAQ,CAACE;QAAI,GAA/CF,QAAQ,CAACC,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6C,CACxE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACR9B,OAAA;MAAA0B,QAAA,EACCjB,YAAY,KAAK,IAAI,iBAClBT,OAAA;QAAOuC,IAAI,EAAC,MAAM;QAACR,KAAK,EAAExB,WAAY;QAACyB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5F;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACR9B,OAAA;MAAQwC,OAAO,EAAExB,iBAAkB;MAAAU,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9DrB,YAAY,iBACTT,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9B,OAAA;QAAA0B,QAAA,EAAIjB,YAAY,CAACgC,WAAW,GAAG,WAAW,GAAG;MAAe;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChErB,YAAY,CAACgC,WAAW,iBAAIzC,OAAA;QAAQwC,OAAO,EAAEvB,aAAc;QAAAS,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA1EID,qBAAqB;AAAAyC,EAAA,GAArBzC,qBAAqB;AA4E3B,eAAeA,qBAAqB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}